@model ShoppingCart
 
<div class="container" style="margin-top:100px">
<h1>Product Details</h1>

<form method="post" asp-controller="Product" asp-action="Details" enctype="multipart/form-data">
	<div class="card border-0 mt-4">

		<div class="card-header bg-body bg-gradient text-light py-4">
			<div class="row">
				<div class="col-12 text-center">
					<h3 class="text-dark text-uppercase">@Model.Product.Name</h3>
					@* <p class="text-white-50 fw-semibold mb-0">Added By: @User.Identity.Name</p> *@
				</div>
			</div>
		</div>

		<div class="card-body">
			<div class="py-3">

				<div class="row">

					<div class="col-12 col-lg-3 offset-lg-1 text-center mb-3">

						
						<img id="ProfilePicture" alt="profile" src=~/img/@Model.Product.imgURL width="50%" class="rounded img-fluid catlogo card-img" style=" aspect-ratio: 1 / 1; object-fit: contain; background-color: white;" />

					</div>

					<div class="col-12 col-lg-6 offset-lg-1">

						<div class="col-12 col-md-6 pb-4">
							<h6 class="text-dark text-opacity-50 ">

								@{
									string categoryName = "Not Assign to Category";
									if (@Model.Product.Category != null)
									{
										categoryName = @Model.Product.Category.Name.ToUpper();
									}
								}

								<b>Category:</b>
								<span class="halftab">@categoryName</span>
							</h6>
						</div>


						<div class="row ps-2">
							<h6 class="text-dark text-opacity-50">
								<b>Stock Price:</b>
								<span class="halftab">@Model.Product.price</span>
							</h6>
						</div>

						<div class="row text-center ps-2">
							<div class="p-1 col-3 col-lg-2 bg-white border-bottom">
								<div class="text-dark text-opacity-50 fw-semibold"><b>Price</b></div>
							</div>
							
						</div>

						<div class="row text-center ps-2">
							<div class="p-1 col-3 col-lg-2 bg-white text-warning fw-bold">
								<div>EGP @(Model.Product.price.ToString("F2"))</div>
							</div>
						</div>

						<div class="row pl-2 my-3">
							<h6 class="text-dark text-opacity-50"><b> Description: </b></h6>
							<br />
							<span class="tab">
								<p class="text-secondary lh-sm"> @Html.Raw(@Model.Product.Description)</p>
							</span>
						</div>

						<span asp-validation-for="quantity" class="text-danger"></span>

						<div class="row pl-2 mb-3 mt-1">
							<div class="col-md-4">
								<div class="input-group mb-3">
									<span class="input-group-text btn-outline-success text-dark border-0 fw-semibold"
										  id="inputGroup-sizing-default">
										Quantity
									</span>
									<input asp-for="@Model.quantity" type="number" value="1" class="form-control text-end"
										   aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default"
											   id="quantityInput" />
								</div>
							</div>
						</div>

						<div class="row">
							<div class="col-12 col-md-6 pb-1">
								<input asp-for="@Model.productId" hidden />
								<button type="submit" id="addToCartButton"
										class="btn btn-success bg-gradient  w-100 py-2 text-uppercase fw-semibold"
										onclick="return validateStock()">
									Add to Cart
								</button>
							</div>
							@if (TempData["ProductError"] != null)
							{
								<div class="text-danger">
									@TempData["ProductError"]
								</div>
							}
						</div>

					</div>

				</div>
			</div>
		</div>

		<div class="card-footer">
			<a asp-action="Index" class="btn btn-outline-primary">Back To Home</a>
		</div>

	</div>
</form>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				Are you sure you want to delete this Product?
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" id="btnContinueToDelete">Delete</button>
			</div>
		</div>
	</div>
</div>
</div>

@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

	<partial name="_ValidationScriptsPartial" />
	<script>
		// Ensure the DOM is fully loaded
		document.addEventListener('DOMContentLoaded', () => {
			const addToCartButton = document.getElementById('addToCartButton');
			const quantityInput = document.getElementById('quantityInput'); // Assuming you have an input field for quantity

			if (addToCartButton && quantityInput) {
				addToCartButton.addEventListener('click', () => {
					const quantity = parseInt(quantityInput.value);

					// Check if quantity is valid
					if (!isNaN(quantity) && quantity >= 1 && quantity <= 100) {
						Swal.fire({
							title: 'Success!',
							text: 'Item added to cart.',
							icon: 'success',
							timer: 1500, // Time in milliseconds (8000ms = 8 seconds)
							timerProgressBar: true, // Show a timer progress bar
							showConfirmButton: false // Hide the OK button
						});
					} else {
						// Show error alert if quantity is invalid
						Swal.fire({
							title: 'Error!',
							text: 'Please enter a valid quantity (1-100).',
							icon: 'error',
							timer: 1500, // Time in milliseconds
							timerProgressBar: true,
							showConfirmButton: false // Hide the OK button
						});
					}
				});
			}
		});
	</script>
}
